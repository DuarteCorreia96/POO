package tsp;

import java.util.LinkedList;
import java.util.Random;

/**
 * A {@code Event} is a general class for events to be simulated on the PEC.
 * <p>
 * 
 * It saves the time of the event and functions to get and set it.
 * <p>
 * 
 * It leaves for every event to implement the function {@code doEvent()} 
 * which is the actions to be perfomed by the Event and should return a list of
 * Events generated by those actions. <p>
 * 
 * @author Duarte Correia
 * @author Joao Pinto
 * @author Jose Bastos
 */

public abstract class Event {

    private double eventTime;

    private static Random random = new Random();

    /**
     * Does the actions of the event 
     * @return A list of events orginated by the one being simulated.
     */
    public abstract LinkedList<Event> doEvent();

    /**
     * Generates a random vlaue of the inverse of a exponential probability
     * distribution with average value {@code m}
     * 
     * @param m average of the exponential distribution
     * @return Random value of the inverse of a exponential probability distribution
     */
    public static double expRandom(double m) {
        double next = random.nextDouble();
        return -m * Math.log(1.0 - next);
    }

    /**
     * Sets the EventTime and it should be used by every {@code Event} subclass 
     * constructor.
     * 
     * @param time of the event
     */
    public void setEventTime(double time) {
        eventTime = time;
    }

    /**
     * Returns the time the Event should be done.
     * @return {@code eventTime}
     */
    public double getEventTime() {
        return eventTime;
    }
}